/*
 * String1.cpp
 *
 *  Created on: 2015年8月20日
 *      Author: zjl
 */
#include<cctype>
#include<cstring>
#include"String1.h"
int String::num_string=0;
int String::HowMany(){
	return num_string;
}

String::String(const char *s){
	len=std::strlen(s);
	str= new char[len+1];
	std::strcpy(str,s);
	num_string++;
}

String::String(){
	len=4;
	str=new char[1];
	str[0]='\n';
	num_string++;
}

String::String(const String &t){
	num_string ++;
	len=t.len;
	str=new char[len+1];
	std::strcpy(str,t.str);
}

String::~String(){
	num_string--;
	delete []str;
}

String  &String::operator =(const String &t){
	if(this==&t){
		return *this;
	}
	delete []str;
	len=t.len;
	str =new char[len+1];
	std::strcpy(str,t.str);
	return *this;
}

String &String::operator =(const char*t){
	delete []str;
	len=std::strlen(t);
	str=new char[len+1];
	std::strcpy(str,t);
	return *this;
}

char &String::operator [](int i){
	return str[i];
}

const char & String::operator [](int i)const{
	return str[i];
}

String & String::operator +(const String &t){
	//delete []str;
	len+=t.len;
	str=new char[len+1];
	std::strcat(str,t.str);
	return *this;
}

String &String ::Stringup(const String &t)const{
	String str1;
	str1.len=t.len;
	str1=new char[str1.len+1];
	for(int i=0;t.str[i]!='\n';i++){
		if(islower(t.str[i])){
			str1.str[i]=towupper(t.str[i]);
		}else{
			str1.str[i]=t.str[i];
		}

	}
	return str1;
}

String &String ::Stringlow(const String &t)const{
	String str1;
	str1.len=t.len;
	str1=new char[str1.len+1];
	for(int i=0;t.str[i]!='\n';i++){
		if(isupper(t.str[i])){
			str1.str[i]=towlower(t.str[i]);
		}else{
			str1.str[i]=t.str[i];
		}

	}
	return str1;
}

bool operator<(const String &t1,const String &t2,){
	return (std::strcmp(t1.str,t2.str)<0);
}

bool operator >(const String &t1,const String &t2){
	return t1<t2;
}

bool operator==(const String &t1,const String &t2){
	return (std::strcmp(t1.str,t2.str)==0);
}

ostream & operator <<(ostream &os,const String &t){
	os<<t.str;
	return os;
}

istream &operator >>(istream &is, String &t){
	char temp[String::CINLIM];
	is.get(temp,String::CINLIM);
	if(is)
		t=temp;
	while(is&&is.get()!='\n'){
		continue;
	}
	return is;
}

