/*
 * connection.h
 *
 *  Created on: 2016年3月27日
 *      Author: zjl
 */

#ifndef CONNECTION_H_
#define CONNECTION_H_
#include<sys/socket.h>
#include<unistd.h>
#include<stdlib.h>
#include<stdio.h>
#include<arpa/inet.h>
#include<iostream>
#include<string.h>
#define LISTENQ 1024
namespace{
	int open_listend(int port){
		int listenfd,optval=1;
			struct sockaddr_in serveraddr;

			if((listenfd=socket(AF_INET,SOCK_STREAM,0))<0){
				return -1;
			}
			if(setsockopt(listenfd,SOL_SOCKET,SO_REUSEADDR,(const void *)&optval,sizeof(int))<0){
				return -1;
			}
			bzero((char*)&serveraddr,sizeof(serveraddr));
			serveraddr.sin_family=AF_INET;
			serveraddr.sin_port=htons((unsigned short)port);
			serveraddr.sin_addr.s_addr=htonl(INADDR_ANY);
			if(bind(listenfd,(sockaddr *)& serveraddr,sizeof(serveraddr))<0)
				return -1;
			if(listen(listenfd,LISTENQ)<0){
				return-1;
			}
			return listenfd;}
class connect{
	public:
		connect();
		void listend(int port);
		int accepted();
		void closed();
	private:
		int confd;
		int listenfd;

};




#endif /* CONNECTION_H_ */
