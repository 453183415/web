/*
 * socketFileServer.cpp
 *
 *  Created on: 2016年3月1日
 *      Author: zjl
 */
#include<sys/socket.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<arpa/inet.h>
#include<unistd.h>
#include<sys/signal.h>
#include<sys/stat.h>
#include<fcntl.h>
#include<sys/wait.h>
void handle(int fd);
void handleSig(int signal);
int main(int argc ,char ** argv){

	if(argc < 2){
		printf("error");
		exit(0);
	}
	int sockfd,connfd;
	int opt=1;
	pid_t pid;
	struct sockaddr_in serveraddr,clientaddr;
	bzero(&serveraddr,sizeof(serveraddr));
	serveraddr.sin_family= AF_INET;
	serveraddr.sin_port = htons(8000);
	//inet_pton(AF_INET,argv[1],&serveraddr.sin_addr);
	serveraddr.sin_addr.s_addr=INADDR_ANY;
	sockfd=socket(AF_INET,SOCK_STREAM,0);
	setsockopt(sockfd,SOL_SOCKET,SO_REUSEADDR,&opt,sizeof(opt));
	bind(sockfd,(sockaddr *)&serveraddr,sizeof(serveraddr));
	listen(sockfd,1024);
	signal(SIGCHLD,handleSig);
	socklen_t clientlen;
	clientlen= sizeof(clientaddr);
	while(1){
		connfd=accept(sockfd,(struct sockaddr *)&clientaddr,&clientlen);
		pid=fork();
		 if(pid == 0){
			 close(sockfd);
			handle(connfd);
		}
	}
	return 0;
}

void handle(int fd){
	char buf[1024],filename[256];
	int filefd;
	ssize_t n,ptrlen;
	ptrlen=0;
	printf("%d\n",fd);
	bzero(&buf,1024);
	recv(fd,buf,1024,0);
	bzero(&filename,1024);
	printf("%s\n",buf);
	strncpy(filename,buf,strlen(buf));
	printf("%s\n",filename);
	filefd=open(filename,O_RDONLY);
	printf("%d",filefd);
	if(filefd<0){
		printf("open file error");
//		write(fd,"open file error",15);
		close(fd);
		exit(0);
	}else{
		printf("open file successful");
		bzero(&buf,1024);
		while((n=read(filefd,buf,1024))>0){
			ptrlen+=n;
			lseek(filefd,ptrlen,SEEK_CUR);
			write(fd,buf,sizeof(buf));
			bzero(&buf,1024);
		}
	}
	close(fd);
}
void handleSig(int signal){
	pid_t pid;
	int stat;
	while((pid= waitpid(-1,&stat,WNOHANG))>0);
}


