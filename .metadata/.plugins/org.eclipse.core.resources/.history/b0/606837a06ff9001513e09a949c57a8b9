/*
 * processpool.h
 *
 *  Created on: 2015年11月3日
 *      Author: zjl
 */

#ifndef PROCESSPOOL_H_
#define PROCESSPOOL_H_

#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<assert.h>
#include<errno.h>
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>
#include<fcntl.h>
#include<sys/epoll.h>
#include<signal.h>
#include<sys/wait.h>
#include<sys/stat.h>
class process{
	public:
		pid_t m_pid;
		int m_pipefd[2];
	public:
		process():m_pid(-1){

		}
		virtual ~ process(){

		}
};
template<typename T>
class processpool{
	private:
		static const int MAX_PROCESS_NUMBER = 16;
		static const int USER_PER_PROCESS = 65535;
		static const int MAX_EVENT_NUMBER = 10000;
		int m_process_number;
		int m_dix;
		int m_epollfd;
		int m_listenfd;
		int m_stop;
		process *m_sub_process;
		static processpool<T>*m_instance;
};



#endif /* PROCESSPOOL_H_ */
