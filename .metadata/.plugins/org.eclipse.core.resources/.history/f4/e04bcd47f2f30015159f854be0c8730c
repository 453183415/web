/*
 * user.h
 *
 *  Created on: 2016年3月27日
 *      Author: zjl
 */

#ifndef USER_USER_H_
#define USER_USER_H_
#include<sys/socket.h>
#include<sys/types.h>
#include<arpa/inet.h>
#include<iostream>
#include"ZSql.h"
#include"../../log/log.h"
#include"readAndwrite/read.h"
#include"readAndwrite/write.h"
#include"handle_request.h"
void open_file(char * path){}
void *get_pthread(void *args){
	std::map<int ,std::string > path=(std::map<int,std::string>*)args;
	reader::get_instance()->insert_msg(path.begin()->first,path.begin()->second);

	return NULL;
}
void *put_pthread(void *args){}
void user(const int &fd){
	char buf[1024];
	int n;
	pthread_t pid;
	int status;
	std::string query;
	char username[25];
	char passwd[25];
	char  commond[10];
	char path[256];
	struct sockaddr_in client;
	getpeername(fd,(struct sockaddr*)&client,NULL);
	while(1){
		bzero(&buf,1024);
		n=read(fd,buf,1024);
		sprintf(buf,"%s %s",username,passwd);
		query="select username,passwd from user where" +"username="+username+",passwd="+passwd;
		mysql_real_query(ZSql::get_instance()->getMysql(),query.c_str(),query.size());
		MYSQL *result = mysql_store_result(ZSql::get_instance()->getMysql());
		if(result != NULL){
			write(fd,"success",8);
			break;
		}
		write(fd,"error",5);
	}
	while(1){
		bzero(&buf,1024);
		read(fd,buf,1024);
		sprintf(buf,"%s %s",commond,path);
		if(commond == "cd"||commond == "CD"){
			if(opendir(path)!=NULL){
				write(fd,path,sizeof(path));
			}else{
				write(fd,"error path",10);
			}
		}
		if(commond=="ls"||commond=="LS"){
			if(opendir(path)!=NULL){
							open_file(path);
						}else{
							write(fd,"error path",10);
						}

		}
		if(commond=="GET"|| commond=="get"){
			if(opendir(path)!=NULL){
							write(fd,"successed",10);
							std::map<int ,std::string>a(fd,commond);
							pthread_create(&pid,NULL,get_pthread,&a);
							pthread_join(pid,NULL);
						}else{
							write(fd,"error path",10);
						}

		}
		if(commond=="PUT"||commond=="put"){
			if(opendir(path)!=NULL){
										write(fd,"successed",10);
										pthread_create(&pid,NULL,put_pthread,&client);
										pthread_join(pid,NULL);
									}else{
										write(fd,"error path",10);
									}

		}
		if(commond=="BYE"||commond=="bye"){
			write(fd,"bye",3);
			close(fd);
			exit(0);
		}else{
			write(fd,"error commond",13);
		}
	}
}




#endif /* USER_USER_H_ */
