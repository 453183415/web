/*
 * sctp_serv.cpp
 *
 *  Created on: 2016年1月24日
 *      Author: zjl
 */
#include"../unix.h"
#define MAXSIZE 1024
int main(int argc , char ** argv )
{
	int sockfd,msg_flags;
	char buf[MAXSIZE];
	struct sockaddr_in serveraddr,clientaddr;
	struct sctp_sndrcvinfo sri;
	struct sctp_event_subscribe events;
	int  stream_increment=1;

	socklen_t len;
	size_t rd_sz;
	if(argc == 2){
		stream_increment=atoi(argv[1]);
	}
	sockfd= socket(AF_INET, SOCK_SEQPACKET, IPPROTO_SCTP);
	bzero(&serveraddr, sizeof(serveraddr));
	serveraddr.sin_family = AF_INET;
	serveraddr.sin_port = htons(55555);
	serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
	bind(sockfd, (struct sockaddr *)& serveraddr, sizeof(serveraddr));
	bzero(&events, sizeof(events));
	events.sctp_data_io_event=1;
	setsockopt(sockfd,IPPROTO_SCTP,SCTP_EVENTS,&events,sizeof(events));
	listen(sockfd,MAXSIZE);

	for( ;  ; ){
		len = sizeof(struct sockaddr_in) ;
		rd_sz= sctp_recvmsg(sockfd, buf, sizeof(buf), (struct sockaddr *)&clientaddr,&len  , &sri, &msg_flags);
;
		if(stream_increment ){
			sri.sinfo_stream++;
//			if(sri.sinfo_stream>= sctp_get_no_strms(sockfd,(struct sockaddr *)&clientaddr,len)){
//				sri.sinfo_stream =0 ;
//			}
		}
		 sctp_sendmsg(sockfd, buf, rd_sz, (struct sockaddr*)&clientaddr,len,
															sri.sinfo_ppid,sri.sinfo_flags,sri.sinfo_stream,0,0);


	}
}



